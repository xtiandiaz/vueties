@use '@design-tokens/palette';
@use '@design-tokens/typography';
@use '../../styles/mixins';

$form-padding: 1rem;
$max-width: 1080px !default;
$row-border-radius: 1em;
$row-h-padding: 1rem;
$row-min-height: 3rem;

form {
  display: flex;
  flex-direction: column;
  gap: 2em;
  margin: 0 auto;
  max-width: $max-width;
  padding: $form-padding;
  text-align: left;
  
  ::placeholder {
    @include palette.color-attribute('color', 'accessory');
  }
  
  input:focus, textarea:focus {
    outline: none;
  }
  
  input[type=text] {
    line-height: $row-min-height;
    @include palette.color-attributes((
      'background-color': 'background',
      'color': 'body',
      'caret-color': 'body'
    ));
  }

  section {
    display: flex;
    flex-direction: column;
    gap: 0.5em;
    
    > * {
      width: auto;
    }
    
    div.header, div.footer {
      @extend .caption;
      padding: 0 1em;
      @include palette.color-attribute('color', 'tertiary-body');
      
      > * {
        display: block;
      }
    }
    
    div.header {
      display: flex;
      flex-direction: column;
      gap: 0.25em;
      
      &.inline {
        align-items: center;
        flex-direction: row;
        gap: 0.5em;
      }
      
      span.title {
        @extend .strong;
      }
    }
    
    .rows {
      border-radius: $row-border-radius;
      display: flex;
      flex-direction: column;
      gap: 1px;
      overflow: hidden;
      @include palette.color-attributes((
        'background-color': 'tertiary-background'
      ));
      
      .divider {
        line-height: calc($row-min-height / 1.25);
        margin-bottom: 1px;
        padding-left: 1em;
        @include palette.color-attribute('background-color', 'background', 0.75);
        @include palette.color-attribute('color', 'secondary-body');
        // @include mixins.linear-gradient(0deg, 'secondary-background' 0 0%, 'secondary-background' 1 100%);
      }
    }
  }
  
  .row {
    align-items: center;
    display: flex;
    flex-direction: row;
    gap: 0.75em;
    min-height: $row-min-height;
    overflow: hidden;
    padding: 0 $row-h-padding;
    @include palette.color-attribute('background-color', 'background');
    
    &:first-of-type .rounded-element {
      border-radius: 1em 1em 0 0;
    }
    &:last-of-type .rounded-element {
      border-radius: 0 0 1em 1em;
    }
    &:only-of-type .rounded-element {
      border-radius: 1em;
    }
    
    &.text-input {
      padding: 0;
      gap: 0;
      
      input {
        @extend .body;
        border: none;
        padding: 0;
        width: 100%;
      }
    }
    
    &.discloser {
      padding-right: calc($row-h-padding / 1.5);
    }
    
    .disclosure-indicator {
      @include mixins.size(1rem);
      @include palette.color-attribute('color', 'accessory');
    }
    
    .disclosure-wrapper {
      align-items: center;
      display: inline-flex;
      gap: 0.5em;
      
      > * {
        display: inline-block;
      }
    }
    
    .representative-icon {
      @include mixins.size(1.5em);
    }
    
    .spacer {
      flex: auto;
    }
  }
}
